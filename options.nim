Switch(legacyName: "Fromcmd",
  long: "fromcmd",
  kind: how_do_i_know, ),
Switch(legacyName: "Path",
  short: "p",
  long: "path",
  kind: how_do_i_know, ),
Switch(legacyName: "Nimblepath",
  long: "nimblepath",
  kind: how_do_i_know, ),
Switch(legacyName: "Nonimblepath",
  long: "nonimblepath",
  kind: how_do_i_know, ),
Switch(legacyName: "Clearnimblepath",
  long: "clearnimblepath",
  kind: how_do_i_know, ),
Switch(legacyName: "Excludepath",
  long: "excludepath",
  kind: how_do_i_know, ),
Switch(legacyName: "Nimcache",
  long: "nimcache",
  kind: how_do_i_know, ),
Switch(legacyName: "Out",
  short: "o",
  long: "out",
  kind: how_do_i_know, ),
Switch(legacyName: "Outdir",
  long: "outdir",
  kind: how_do_i_know, ),
Switch(legacyName: "Depfile",
  long: "depfile",
  kind: how_do_i_know, ),
Switch(legacyName: "Usenimcache",
  long: "usenimcache",
  kind: how_do_i_know, ),
Switch(legacyName: "Docseesrcurl",
  long: "docseesrcurl",
  kind: how_do_i_know, ),
Switch(legacyName: "Docroot",
  long: "docroot",
  kind: how_do_i_know, ),
Switch(legacyName: "Backend",
  short: "b",
  long: "backend",
  kind: how_do_i_know, ),
Switch(legacyName: "Doccmd",
  long: "doccmd",
  kind: how_do_i_know, ),
Switch(legacyName: "Define",
  short: "d",
  long: "define",
  kind: how_do_i_know, ),
Switch(legacyName: "Undef",
  short: "u",
  long: "undef",
  kind: how_do_i_know, ),
Switch(legacyName: "Compile",
  long: "compile",
  kind: how_do_i_know, ),
Switch(legacyName: "Link",
  long: "link",
  kind: how_do_i_know, ),
Switch(legacyName: "Debuginfo",
  long: "debuginfo",
  kind: how_do_i_know, ),
Switch(legacyName: "Embedsrc",
  long: "embedsrc",
  kind: how_do_i_know, ),
Switch(legacyName: "Compileonly",
  short: "c",
  long: "compileonly",
  kind: how_do_i_know, ),
Switch(legacyName: "Nolinking",
  long: "nolinking",
  kind: how_do_i_know, ),
Switch(legacyName: "Nomain",
  long: "nomain",
  kind: how_do_i_know, ),
Switch(legacyName: "Forcebuild",
  short: "f",
  long: "forcebuild",
  kind: how_do_i_know, ),
Switch(legacyName: "Project",
  long: "project",
  kind: how_do_i_know, ),
Switch(legacyName: "Gc",
  long: "gc",
  kind: how_do_i_know, ),
Switch(legacyName: "Warnings",
  short: "w",
  long: "warnings",
  kind: how_do_i_know, ),
Switch(legacyName: "Warning",
  long: "warning",
  kind: how_do_i_know, ),
Switch(legacyName: "Hint",
  long: "hint",
  kind: how_do_i_know, ),
Switch(legacyName: "Warningaserror",
  long: "warningaserror",
  kind: how_do_i_know, ),
Switch(legacyName: "Hintaserror",
  long: "hintaserror",
  kind: how_do_i_know, ),
Switch(legacyName: "Hints",
  long: "hints",
  kind: how_do_i_know, ),
Switch(legacyName: "Threadanalysis",
  long: "threadanalysis",
  kind: how_do_i_know, ),
Switch(legacyName: "Stacktrace",
  long: "stacktrace",
  kind: how_do_i_know, ),
Switch(legacyName: "Stacktracemsgs",
  long: "stacktracemsgs",
  kind: how_do_i_know, ),
Switch(legacyName: "Excessivestacktrace",
  long: "excessivestacktrace",
  kind: how_do_i_know, ),
Switch(legacyName: "Linetrace",
  long: "linetrace",
  kind: how_do_i_know, ),
Switch(legacyName: "Debugger",
  long: "debugger",
  kind: how_do_i_know, ),
Switch(legacyName: "Profiler",
  long: "profiler",
  kind: how_do_i_know, ),
Switch(legacyName: "Memtracker",
  long: "memtracker",
  kind: how_do_i_know, ),
Switch(legacyName: "Checks",
  long: "checks",
  kind: how_do_i_know, ),
Switch(legacyName: "Floatchecks",
  long: "floatchecks",
  kind: how_do_i_know, ),
Switch(legacyName: "Infchecks",
  long: "infchecks",
  kind: how_do_i_know, ),
Switch(legacyName: "Nanchecks",
  long: "nanchecks",
  kind: how_do_i_know, ),
Switch(legacyName: "Objchecks",
  long: "objchecks",
  kind: how_do_i_know, ),
Switch(legacyName: "Fieldchecks",
  long: "fieldchecks",
  kind: how_do_i_know, ),
Switch(legacyName: "Rangechecks",
  long: "rangechecks",
  kind: how_do_i_know, ),
Switch(legacyName: "Boundchecks",
  long: "boundchecks",
  kind: how_do_i_know, ),
Switch(legacyName: "Overflowchecks",
  long: "overflowchecks",
  kind: how_do_i_know, ),
Switch(legacyName: "Staticboundchecks",
  long: "staticboundchecks",
  kind: how_do_i_know, ),
Switch(legacyName: "Stylechecks",
  long: "stylechecks",
  kind: how_do_i_know, ),
Switch(legacyName: "Linedir",
  long: "linedir",
  kind: how_do_i_know, ),
Switch(legacyName: "Assertions",
  long: "assertions",
  kind: how_do_i_know, ),
Switch(legacyName: "Threads",
  long: "threads",
  kind: how_do_i_know, ),
Switch(legacyName: "Tlsemulation",
  long: "tlsemulation",
  kind: how_do_i_know, ),
Switch(legacyName: "Implicitstatic",
  long: "implicitstatic",
  kind: how_do_i_know, ),
Switch(legacyName: "Trmacros",
  long: "trmacros",
  kind: how_do_i_know, ),
Switch(legacyName: "Opt",
  long: "opt",
  kind: how_do_i_know, ),
Switch(legacyName: "App",
  long: "app",
  kind: how_do_i_know, ),
Switch(legacyName: "Passc",
  long: "passc",
  kind: how_do_i_know, ),
Switch(legacyName: "Passl",
  long: "passl",
  kind: how_do_i_know, ),
Switch(legacyName: "Cincludes",
  long: "cincludes",
  kind: how_do_i_know, ),
Switch(legacyName: "Clibdir",
  long: "clibdir",
  kind: how_do_i_know, ),
Switch(legacyName: "Clib",
  long: "clib",
  kind: how_do_i_know, ),
Switch(legacyName: "Header",
  long: "header",
  kind: how_do_i_know, ),
Switch(legacyName: "Index",
  long: "index",
  kind: how_do_i_know, ),
Switch(legacyName: "Import",
  long: "import",
  kind: how_do_i_know, ),
Switch(legacyName: "Include",
  long: "include",
  kind: how_do_i_know, ),
Switch(legacyName: "Listcmd",
  long: "listcmd",
  kind: how_do_i_know, ),
Switch(legacyName: "Asm",
  long: "asm",
  kind: how_do_i_know, ),
Switch(legacyName: "Genmapping",
  long: "genmapping",
  kind: how_do_i_know, ),
Switch(legacyName: "Os",
  long: "os",
  kind: how_do_i_know, ),
Switch(legacyName: "Cpu",
  long: "cpu",
  kind: how_do_i_know, ),
Switch(legacyName: "Run",
  long: "run",
  kind: how_do_i_know, ),
Switch(legacyName: "Maxloopiterationsvm",
  long: "maxloopiterationsvm",
  kind: how_do_i_know, ),
Switch(legacyName: "Errormax",
  long: "errormax",
  kind: how_do_i_know, ),
Switch(legacyName: "Verbosity",
  long: "verbosity",
  kind: how_do_i_know, ),
Switch(legacyName: "Parallelbuild",
  long: "parallelbuild",
  kind: how_do_i_know, ),
Switch(legacyName: "Incremental",
  long: "ic",
  kind: how_do_i_know, ),
Switch(legacyName: "Skipcfg",
  long: "skipcfg",
  kind: how_do_i_know, ),
Switch(legacyName: "Skipprojcfg",
  long: "skipprojcfg",
  kind: how_do_i_know, ),
Switch(legacyName: "Skipusercfg",
  long: "skipusercfg",
  kind: how_do_i_know, ),
Switch(legacyName: "Skipparentcfg",
  long: "skipparentcfg",
  kind: how_do_i_know, ),
Switch(legacyName: "Genscript",
  long: "genscript",
  kind: how_do_i_know, ),
Switch(legacyName: "Colors",
  long: "colors",
  kind: how_do_i_know, ),
Switch(legacyName: "Lib",
  long: "lib",
  kind: how_do_i_know, ),
Switch(legacyName: "Putenv",
  long: "putenv",
  kind: how_do_i_know, ),
Switch(legacyName: "Cc",
  long: "cc",
  kind: how_do_i_know, ),
Switch(legacyName: "Stdout",
  long: "stdout",
  kind: how_do_i_know, ),
Switch(legacyName: "Filenames",
  long: "filenames",
  kind: how_do_i_know, ),
Switch(legacyName: "Processing",
  long: "processing",
  kind: how_do_i_know, ),
Switch(legacyName: "Unitsep",
  long: "unitsep",
  kind: how_do_i_know, ),
Switch(legacyName: "Listfullpaths",
  long: "listfullpaths",
  kind: how_do_i_know, ),
Switch(legacyName: "Spellsuggest",
  long: "spellsuggest",
  kind: how_do_i_know, ),
Switch(legacyName: "Declaredlocs",
  long: "declaredlocs",
  kind: how_do_i_know, ),
Switch(legacyName: "Dynliboverride",
  long: "dynliboverride",
  kind: how_do_i_know, ),
Switch(legacyName: "Dynliboverrideall",
  long: "dynliboverrideall",
  kind: how_do_i_know, ),
Switch(legacyName: "Experimental",
  long: "experimental",
  kind: how_do_i_know, ),
Switch(legacyName: "Exceptions",
  long: "exceptions",
  kind: how_do_i_know, ),
Switch(legacyName: "Cppdefine",
  long: "cppdefine",
  kind: how_do_i_know, ),
Switch(legacyName: "Seqsv2",
  long: "seqsv2",
  kind: how_do_i_know, ),
Switch(legacyName: "Stylecheck",
  long: "stylecheck",
  kind: how_do_i_know, ),
Switch(legacyName: "Showallmismatches",
  long: "showallmismatches",
  kind: how_do_i_know, ),
Switch(legacyName: "Docinternal",
  long: "docinternal",
  kind: how_do_i_know, ),
Switch(legacyName: "Multimethods",
  long: "multimethods",
  kind: how_do_i_know, ),
Switch(legacyName: "Expandmacro",
  long: "expandmacro",
  kind: how_do_i_know, ),
Switch(legacyName: "Expandarc",
  long: "expandarc",
  kind: how_do_i_know, ),
Switch(legacyName: "Benchmarkvm",
  long: "benchmarkvm",
  kind: how_do_i_know, ),
Switch(legacyName: "Profilevm",
  long: "profilevm",
  kind: how_do_i_know, ),
Switch(legacyName: "Sinkinference",
  long: "sinkinference",
  kind: how_do_i_know, ),
Switch(legacyName: "Cursorinference",
  long: "cursorinference",
  kind: how_do_i_know, ),
Switch(legacyName: "Panics",
  long: "panics",
  kind: how_do_i_know, ),
Switch(legacyName: "Sourcemap",
  long: "sourcemap",
  kind: how_do_i_know, ),
Switch(legacyName: "Deepcopy",
  long: "deepcopy",
  kind: how_do_i_know, ),
Switch(legacyName: "ProjStdin",
  kind: how_do_i_know, ),
Switch(legacyName: "Cmdexitgcstats",
  long: "cmdexitgcstats",
  kind: how_do_i_know, ),
Switch(legacyName: "ConfigVar",
  long: "*.*",
  kind: how_do_i_know, ),
