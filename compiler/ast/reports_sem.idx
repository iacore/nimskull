sgcuCallsUnsafe	ast/reports_sem.html#sgcuCallsUnsafe	SemGcUnsafetyKind.sgcuCallsUnsafe	
sgcuAccessesGcGlobal	ast/reports_sem.html#sgcuAccessesGcGlobal	SemGcUnsafetyKind.sgcuAccessesGcGlobal	
sgcuIndirectCallVia	ast/reports_sem.html#sgcuIndirectCallVia	SemGcUnsafetyKind.sgcuIndirectCallVia	
sgcuIndirectCallHere	ast/reports_sem.html#sgcuIndirectCallHere	SemGcUnsafetyKind.sgcuIndirectCallHere	
SemGcUnsafetyKind	ast/reports_sem.html#SemGcUnsafetyKind	reports_sem: SemGcUnsafetyKind	
ssefUsesGlobalState	ast/reports_sem.html#ssefUsesGlobalState	SemSideEffectCallKind.ssefUsesGlobalState	
ssefCallsSideEffect	ast/reports_sem.html#ssefCallsSideEffect	SemSideEffectCallKind.ssefCallsSideEffect	
ssefCallsViaHiddenIndirection	ast/reports_sem.html#ssefCallsViaHiddenIndirection	SemSideEffectCallKind.ssefCallsViaHiddenIndirection	
ssefCallsViaIndirection	ast/reports_sem.html#ssefCallsViaIndirection	SemSideEffectCallKind.ssefCallsViaIndirection	
ssefParameterMutation	ast/reports_sem.html#ssefParameterMutation	SemSideEffectCallKind.ssefParameterMutation	
SemSideEffectCallKind	ast/reports_sem.html#SemSideEffectCallKind	reports_sem: SemSideEffectCallKind	
SemNilHistory	ast/reports_sem.html#SemNilHistory	reports_sem: SemNilHistory	
SemReport	ast/reports_sem.html#SemReport	reports_sem: SemReport	
semstepEnter	ast/reports_sem.html#semstepEnter	DebugSemStepDirection.semstepEnter	
semstepLeave	ast/reports_sem.html#semstepLeave	DebugSemStepDirection.semstepLeave	
DebugSemStepDirection	ast/reports_sem.html#DebugSemStepDirection	reports_sem: DebugSemStepDirection	
stepNodeToNode	ast/reports_sem.html#stepNodeToNode	DebugSemStepKind.stepNodeToNode	
stepNodeToSym	ast/reports_sem.html#stepNodeToSym	DebugSemStepKind.stepNodeToSym	
stepIdentToSym	ast/reports_sem.html#stepIdentToSym	DebugSemStepKind.stepIdentToSym	
stepSymNodeToNode	ast/reports_sem.html#stepSymNodeToNode	DebugSemStepKind.stepSymNodeToNode	
stepNodeFlagsToNode	ast/reports_sem.html#stepNodeFlagsToNode	DebugSemStepKind.stepNodeFlagsToNode	
stepNodeTypeToNode	ast/reports_sem.html#stepNodeTypeToNode	DebugSemStepKind.stepNodeTypeToNode	
stepTypeTypeToType	ast/reports_sem.html#stepTypeTypeToType	DebugSemStepKind.stepTypeTypeToType	
stepResolveOverload	ast/reports_sem.html#stepResolveOverload	DebugSemStepKind.stepResolveOverload	
stepNodeSigMatch	ast/reports_sem.html#stepNodeSigMatch	DebugSemStepKind.stepNodeSigMatch	
stepWrongNode	ast/reports_sem.html#stepWrongNode	DebugSemStepKind.stepWrongNode	
stepError	ast/reports_sem.html#stepError	DebugSemStepKind.stepError	
stepTrack	ast/reports_sem.html#stepTrack	DebugSemStepKind.stepTrack	
DebugSemStepKind	ast/reports_sem.html#DebugSemStepKind	reports_sem: DebugSemStepKind	
DebugCallableCandidate	ast/reports_sem.html#DebugCallableCandidate	reports_sem: DebugCallableCandidate	
DebugSemStep	ast/reports_sem.html#DebugSemStep	reports_sem: DebugSemStep	
TraceSemReport	ast/reports_sem.html#TraceSemReport	reports_sem: TraceSemReport	
severity	ast/reports_sem.html#severity,SemReport	reports_sem: severity(report: SemReport): ReportSeverity	
reportSymbols	ast/reports_sem.html#reportSymbols,ReportKind,seq[PSym],PType,PNode	reports_sem: reportSymbols(kind: ReportKind; symbols: seq[PSym]; typ: PType = nil;\n              ast: PNode = nil): SemReport	
reportSem	ast/reports_sem.html#reportSem,ReportKind	reports_sem: reportSem(kind: ReportKind): SemReport	
reportAst	ast/reports_sem.html#reportAst,ReportKind,PNode,string,PType,PSym	reports_sem: reportAst(kind: ReportKind; ast: PNode; str: string = &quot;&quot;; typ: PType = nil;\n          sym: PSym = nil): SemReport	
reportTyp	ast/reports_sem.html#reportTyp,ReportKind,PType,PNode,PSym,string	reports_sem: reportTyp(kind: ReportKind; typ: PType; ast: PNode = nil; sym: PSym = nil;\n          str: string = &quot;&quot;): SemReport	
reportStr	ast/reports_sem.html#reportStr,ReportKind,string,PNode,PType,PSym	reports_sem: reportStr(kind: ReportKind; str: string; ast: PNode = nil; typ: PType = nil;\n          sym: PSym = nil): SemReport	
reportSym	ast/reports_sem.html#reportSym,ReportKind,PSym,PNode,string,PType	reports_sem: reportSym(kind: ReportKind; sym: PSym; ast: PNode = nil; str: string = &quot;&quot;;\n          typ: PType = nil): SemReport	
severity	ast/reports_sem.html#severity,TraceSemReport	reports_sem: severity(report: TraceSemReport): ReportSeverity	
