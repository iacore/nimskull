CheckedAst	ast/checked_ast.html#CheckedAst	checked_ast: CheckedAst	
initForMappingChildren	ast/checked_ast.html#initForMappingChildren,CheckedAst,PNode	checked_ast: initForMappingChildren(x: var CheckedAst; n: PNode)	
initWith	ast/checked_ast.html#initWith,CheckedAst,sinkPNode	checked_ast: initWith(x: var CheckedAst; n: sink PNode)	
newError	ast/checked_ast.html#newError,ConfigRef,sinkCheckedAst,PAstDiag	checked_ast: newError(c: ConfigRef; n: sink CheckedAst; diag: PAstDiag): CheckedAst	
kind	ast/checked_ast.html#kind,CheckedAst	checked_ast: kind(x: CheckedAst): TNodeKind	
len	ast/checked_ast.html#len,CheckedAst	checked_ast: len(x: CheckedAst): int	
info	ast/checked_ast.html#info,CheckedAst	checked_ast: info(x: CheckedAst): TLineInfo	
add	ast/checked_ast.html#add,CheckedAst,sinkPNode	checked_ast: add(x: var CheckedAst; n: sink PNode)	
add	ast/checked_ast.html#add,CheckedAst,sinkCheckedAst	checked_ast: add(x: var CheckedAst; n: sink CheckedAst)	
`[]`	ast/checked_ast.html#[],CheckedAst,	checked_ast: `[]`(x: CheckedAst; i: int | BackwardsIndex): PNode	
`[]=`	ast/checked_ast.html#[]=,CheckedAst,,sinkPNode	checked_ast: `[]=`(x: var CheckedAst; i: int | BackwardsIndex; n: sink PNode)	
`[]=`	ast/checked_ast.html#[]=,CheckedAst,,sinkCheckedAst	checked_ast: `[]=`(x: var CheckedAst; i: int | BackwardsIndex; n: sink CheckedAst)	
extract	ast/checked_ast.html#extract,ConfigRef,sinkCheckedAst	checked_ast: extract(c: ConfigRef; n: sink CheckedAst): PNode	
flattenIf	ast/checked_ast.html#flattenIf,CheckedAst,TNodeKind	checked_ast: flattenIf(n: var CheckedAst; kind: TNodeKind)	
get	ast/checked_ast.html#get.t,CheckedAst	checked_ast: get(n: CheckedAst): PNode	
